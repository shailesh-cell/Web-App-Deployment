name: Deploy Resource Group

on:
  workflow_dispatch:
    inputs:
      env:
        description: 'Environment for Deployment (dev, prod, etc.)'
        required: true
        default: 'dev'
      step:
        description: 'Deployment Step (resource-group)'
        required: false
        default: 'all'

permissions:
  id-token: write
  contents: read

jobs:
  login:
    runs-on: ubuntu-latest
    steps:
      - name: Azure Login using Service Principal
        uses: azure/login@v2
        with:
          creds: '{"clientId":"${{ secrets.ARM_CLIENT_ID }}","clientSecret":"${{ secrets.ARM_CLIENT_SECRET }}","subscriptionId":"${{ secrets.ARM_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.ARM_TENANT_ID }}"}'
          enable-AzPSSession: true

  resource-group:
    runs-on: ubuntu-latest
    needs: login  # Ensures Azure login runs first
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3  # FIX: Ensure Terraform files are available

      - name: Debug - List Files
        run: ls -R  # FIX: Print files to ensure Terraform files exist

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.7

      - name: Set environment variables for Terraform authentication
        run: |
          echo "ARM_CLIENT_ID=${{ secrets.ARM_CLIENT_ID }}" >> $GITHUB_ENV
          echo "ARM_CLIENT_SECRET=${{ secrets.ARM_CLIENT_SECRET }}" >> $GITHUB_ENV
          echo "ARM_TENANT_ID=${{ secrets.ARM_TENANT_ID }}" >> $GITHUB_ENV
          echo "ARM_SUBSCRIPTION_ID=${{ secrets.ARM_SUBSCRIPTION_ID }}" >> $GITHUB_ENV

      - name: Initialize Terraform Backend
        working-directory: terraform  # FIX: Ensure this matches the Terraform directory
        run: |
          terraform init \
            -backend-config="resource_group_name=${{ secrets.TFSTATE_RESOURCE_GROUP }}" \
            -backend-config="storage_account_name=${{ secrets.TFSTATE_STORAGE_ACCOUNT }}" \
            -backend-config="container_name=${{ secrets.TFSTATE_CONTAINER }}" \
            -backend-config="key=terraform.tfstate"

      - name: Validate Terraform Configuration
        working-directory: terraform
        run: terraform validate

      - name: Create Resource Group
        working-directory: terraform
        run: |
          terraform apply -auto-approve -target=azurerm_resource_group.rg -var-file="env/${{ inputs.env }}.tfvars"  # FIX: Corrected variable reference