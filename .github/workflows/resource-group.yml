name: Run Azure Login and Create Resource Group

on:
  workflow_dispatch:  # Allows manual execution of both jobs

permissions:
  id-token: write
  contents: read

jobs:

  # ðŸŸ¢ Stage 1: Login (Runs on Push)
  login:
    runs-on: ubuntu-latest
    steps:
      - name: Azure Login using Service Principal
        uses: azure/login@v2
        with:
          creds: '{"clientId":"${{ secrets.ARM_CLIENT_ID }}","clientSecret":"${{ secrets.ARM_CLIENT_SECRET }}","subscriptionId":"${{ secrets.ARM_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.ARM_TENANT_ID }}"}'
          enable-AzPSSession: true

  # ðŸŸ¢ Stage 2: Resource Group (Runs only when triggered manually)
  resource-group:
    runs-on: ubuntu-latest
    needs: login  # Ensures login completes first
    if: github.event_name == 'workflow_dispatch'  # Runs only when manually triggered
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3  # Ensures Terraform files are available

      - name: Debug - List Files
        run: ls -R  # Verify Terraform files exist in the runner

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.7

      - name: Set environment variables for Terraform authentication
        run: |
          echo "ARM_CLIENT_ID=${{ secrets.ARM_CLIENT_ID }}" >> $GITHUB_ENV
          echo "ARM_CLIENT_SECRET=${{ secrets.ARM_CLIENT_SECRET }}" >> $GITHUB_ENV
          echo "ARM_TENANT_ID=${{ secrets.ARM_TENANT_ID }}" >> $GITHUB_ENV
          echo "ARM_SUBSCRIPTION_ID=${{ secrets.ARM_SUBSCRIPTION_ID }}" >> $GITHUB_ENV

      - name: Initialize Terraform Backend
        working-directory: terraform
        run: |
          terraform init \
            -backend-config="resource_group_name=${{ secrets.TFSTATE_RESOURCE_GROUP }}" \
            -backend-config="storage_account_name=${{ secrets.TFSTATE_STORAGE_ACCOUNT }}" \
            -backend-config="container_name=${{ secrets.TFSTATE_CONTAINER }}" \
            -backend-config="key=terraform.tfstate"

      - name: Validate Terraform Configuration
        working-directory: terraform
        run: terraform validate

      - name: Create Resource Group
        working-directory: terraform
        run: |
          terraform apply -auto-approve -target=azurerm_resource_group.rg -var-file="env/dev.tfvars"  # Change "dev" if needed