name: Reset Resource Group in Azure

on:
  workflow_dispatch:
    inputs:
      env:
        description: 'Environment for Deployment (dev, prod, etc.)'
        required: true
        default: 'dev'
      action:
        description: 'Action to perform (deploy, destroy)'
        required: true
        default: 'deploy'
      step:
        description: 'Deployment Step (resource-group)'
        required: false
        default: 'resource-group'

permissions:
  id-token: write
  contents: read

jobs:
  reset:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.action == 'deploy' }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Login to Azure using OIDC
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.ARM_CLIENT_ID }}
          tenant-id: ${{ secrets.ARM_TENANT_ID }}
          subscription-id: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          allow-no-subscriptions: true

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.7

      - name: Set environment variables for Terraform authentication
        run: |
          echo "ARM_CLIENT_ID=${{ secrets.ARM_CLIENT_ID }}" >> $GITHUB_ENV
          echo "ARM_CLIENT_SECRET=${{ secrets.ARM_CLIENT_SECRET }}" >> $GITHUB_ENV
          echo "ARM_TENANT_ID=${{ secrets.ARM_TENANT_ID }}" >> $GITHUB_ENV
          echo "ARM_SUBSCRIPTION_ID=${{ secrets.ARM_SUBSCRIPTION_ID }}" >> $GITHUB_ENV

      - name: Reset Resource Group
        if: ${{ github.event.inputs.step == 'resource-group' || github.event.inputs.step == 'all' }}
        working-directory: terraform
        run: |
          terraform apply -auto-approve -target=azurerm_resource_group.rg -var-file="env/${{ github.event.inputs.env }}.tfvars"

  destroy:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.action == 'destroy' }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Login to Azure using OIDC
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.ARM_CLIENT_ID }}
          tenant-id: ${{ secrets.ARM_TENANT_ID }}
          subscription-id: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          allow-no-subscriptions: true

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.7

      - name: Set environment variables for Terraform authentication
        run: |
          echo "ARM_CLIENT_ID=${{ secrets.ARM_CLIENT_ID }}" >> $GITHUB_ENV
          echo "ARM_CLIENT_SECRET=${{ secrets.ARM_CLIENT_SECRET }}" >> $GITHUB_ENV
          echo "ARM_TENANT_ID=${{ secrets.ARM_TENANT_ID }}" >> $GITHUB_ENV
          echo "ARM_SUBSCRIPTION_ID=${{ secrets.ARM_SUBSCRIPTION_ID }}" >> $GITHUB_ENV

      - name: Destroy Resource Group
        working-directory: terraform
        run: |
          terraform destroy -auto-approve -var-file="env/${{ github.event.inputs.env }}.tfvars"